name: nioruntime
author: 37 Miners, LLC

args:
    - config:
        help: Configuration file. Any commandline arguments overwrite values in the config file. If multiple values are allowed, both sources (configuration file and commandline are concatenated).
        short: c
        long: config
        takes_value: false
        value_name: config
    - gzip_compression_level:
        help: The compression level of gzip. The value must be a number between 0 and 10. 0 being no compression, 10 being highly compressed. The default value is 7. See the flate2 crate for full details on this setting at https://docs.rs/flate2/latest/flate2/struct.Compression.html#method.new.
        short: g
        long: gzip_compression_level
        takes_value: true
        value_name: gzip_compression_level
    - gzip_extensions:
        help: The mime extensions which will be gzipped. By default gzip compression is used for all files in which the client includes the Accept-Encoding header with gzip as one of the values. If this parameter is set, only the extensions that are specified are gzipped.
        long: gzip_extensions
        takes_value: true
        value_name: gzip_extensions
        multiple: true
    - listener:
        help: TCP SocketAddr to listen for HTTP Requests on. For example 127.0.0.1:8080. If none are specified, 127.0.0.1:8080 is used. Format is <protocol>::<interface>::<port> <private_key_file (https only)> <fullchain_file (https only)> <sni_host (https only)> e.g. -l https://0.0.0.0:443 /path/to/privkey.pem /path/to/fullchain.pem example.com.
        short: l
        long: listener
        takes_value: true
        value_name: listener
        multiple: true
    - threads:
        help: Number of threads used for HTTP processing. The default is 8.
        short: t
        long: threads
        takes_value: true
        value_name: threads
    - show_request_headers:
        help: Show Request Headers for each request. This flag must NOT be set in a production environment.
        long: show_request_headers
        takes_value: false
    - show_response_headers:
        help: Show Response Headers for each request. This flag must NOT be set in a production environment.
        long: show_response_headers
        takes_value: false
    - debug:
        help: Show debugging information and continue to log to stdout. This flag must NOT be set in a production environment.
        short: d
        long: debug
        takes_value: false
    - debug_api:
        help: Show debugging information for get/post api requests. The debug configuration maps the url /post and /get to a dummy api handler for testing purposes. This flag must NOT be set in a production environment.
        long: debug_api
        takes_value: false
    - debug_proxy:
        help: Make a dummy configuration for testing a proxy. It creates a proxy forwarding requests to 127.0.0.1:80 and 127.0.0.1:90.
        long: debug_proxy
        takes_value: false
    - debug_websocket:
        help: Show debugging information for websocket requests. The debug configuration creates a dummy websocket handler for testing purposes. This flag must NOT be set in a production environment.
        long: debug_websocket
        takes_value: false
    - debug_db_update:
        help: Show debugging information for stats and admin db updates. This flag must NOT be set in a production environment.
        long: debug_db_update
        takes_value: false
    - debug_log_queue:
        help: Show debugging information related to the log queue. This flag must NOT be set in a production environment.
        long: debug_log_queue
        takes_value: false
    - debug_show_stats:
        help: Show debugging information related to the stats. This flag must NOT be set in a production environment.
        long: debug_show_stats
        takes_value: false
    - listen_queue_size:
        help: The size of the tcp listen queue. This limits the number of unaccepted connections in the tcp backlog. The default value is 1,000.
        long: listen_queue_size
        takes_value: true
        value_name: listen_queue_size
    - max_header_size:
        help: Maximum size of the entire HTTP header in bytes. The default value is 16,384 bytes (16 kb).
        short: m
        long: max_header_size
        takes_value: true
        value_name: max_header_size
    - max_header_entries:
        help: Maximum number of HTTP header entries in a request. The default value is 1,000.
        short: e
        long: max_header_entries
        takes_value: true
        value_name: max_header_entries
    - max_header_name_len:
        help: Maximum length of a header name in bytes. The default value is 128 bytes.
        short: x
        long: max_header_name_len
        takes_value: true
        value_name: max_header_name_len
    - max_header_value_len:
        help: Maximum length of a header value in bytes. The default value is 1,024 bytes.
        long: max_header_value_len
        takes_value: true
        value_name: max_header_value_len
    - webroot:
        help: The root directory containing webserver files.
        short: r
        long: webroot 
        takes_value: true
        value_name: webroot
    - max_cache_files:
        help: The maximum number of files that can be in the cache at any given time. Note that this is subject to the load factor. So if the max_cache_files is set to 1,000 and the load factor is 0.75, that means only 750 files can be in the cache at any given time. The default value is 100.
        long: max_cache_files
        takes_value: true
        value_name: max_cache_files
    - max_cache_chunks:
        help: The maximum number of slab "chunks" that can be in the cache at any given time. The default value is 200.
        short: u
        long: max_cache_chunks
        takes_value: true
        value_name: max_cache_chunks
    - cache_chunk_size:
        help: The size of the slab "chunks". The default is 262,144 bytes.
        long: cache_chunk_size
        takes_value: true
        value_name: cache_chunk_size
    - max_load_factor:
        help: The maximum load factor of the cache. See the StaticHash documentation for more details. The default value is 0.9.
        short: z
        long: max_load_factor
        takes_value: true
        value_name: max_load_factor
    - max_bring_to_front:
        help: The maximum number of files to bring to the front of the cache, per cycle, per thread. The default value is 1,000.
        short: b
        long: max_bring_to_front
        takes_value: true
        value_name: max_bring_to_front
    - process_cache_update:
        help: The length of the bring_to_front cycle where files are brought to the front of the cache, in milliseconds. The default value is 1,000 ms.
        short: p
        long: process_cache_update
        takes_value: true
        value_name: process_cache_update
    - cache_recheck_fs_millis:
        help: The time, in milliseconds, that the cache will recheck whether a file has been updated on disk. The default value is 3,000 ms.
        short: w
        long: cache_recheck_fs_millis
        takes_value: true
        value_name: cache_recheck_fs_millis
    - idle_timeout:
        help: The amount of time, in milliseconds, before an idle connection is closed. The default is 60,000 ms.
        short: i
        long: idle_timeout
        takes_value: true
        value_name: idle_timeout
    - async_timeout:
        help: The amount of time, in milliseconds, before an idle async connection is closed. The default is 3,600,000 ms, or 1 hour.
        long: async_timeout
        takes_value: true
        value_name: async_timeout
    - connect_timeout:
        help: The amount of time, in milliseconds, before a connection that has not yet sent any data to the server is closed. The default is 30,000 ms.
        short: s
        long: connect_timeout
        takes_value: true
        value_name: connect_timeout
    - read_buffer_size:
        help: The default size in bytes of the eventhandler read buffer. The default value is 10,240 bytes.
        short: j
        long: read_buffer_size
        takes_value: true
        value_name: read_buffer_size
    - max_rwhandles:
        help: The maximum number of read/write handles that the server can accept. This includes handles that the server creates (like proxy connections) and connections the server accepts. The default value is 16,000.
        short: y
        long: max_rwhandles
        takes_value: true
        value_name: max_rwhandles
    - max_active_connections:
        help: The maximum number of active connections for the HTTP server. The default value is max_rwhandles.
        long: max_active_connections
        takes_value: true
        value_name: max_active_connections
    - max_async_connections:
        help: The maximum number of async connections for the HTTP server. The default value is max_rwhandles.
        long: max_async_connections
        takes_value: true
        value_name: max_async_connections
    - max_handle_numeric_value:
        help: The maximum numeric value of a handle (file handles on windows and file descriptors on unix).
        short: n
        long: max_handle_numeric_value
        takes_value: true
        value_name: max_handle_numeric_value
    - housekeeper_frequency:
        help: The frequency, in milliseconds, that the housekeeper thread is executed. This thread does various things like checking for idle connections, doing health checks on the proxy and other things. The default value is 1,000 ms.
        short: a
        long: housekeeper_frequency
        takes_value: true
        value_name: housekeeper_frequency
    - requestlog:
        help: The location of the request log file. This file contains information about reqeusts.
        long: requestlog
        takes_value: true
        value_name: requestlog
    - requestlog_max_size:
        help: The maximum size in bytes of the request log file. After the requestlog reaches this size, a rotation will occur. The default value is 1 MB.
        long: requestlog_max_size
        takes_value: true
        value_name: requestlog_max_size
    - requestlog_max_age:
        help: The maximum age, in milliseconds of the request log file. The default value is 1 hour.
        long: requestlog_max_age
        takes_value: true
        value_name: requestlog_max_age
    - mainlog:
        help: The location of the main log file. This file contains errors and debugging information only.
        long: mainlog
        takes_value: true
        value_name: mainlog
    - mainlog_max_size:
        help: The maximum size in bytes of the main log file. After the mainlog reaches this size, a rotation will occur. The default value is 1 MB.
        long: mainlog_max_size
        takes_value: true
        value_name: mainlog_max_size
    - mainlog_max_age:
        help: The maximum age, in milliseconds of the main log file. The default value is 1 hour.
        long: mainlog_max_age
        takes_value: true
        value_name: mainlog_max_age
    - privkey:
        help: A private key file to be used with a TLS listener. Format is <port>:/path/to/privkey.pem. (e.g. 443:/path/to/privkey.pem)
        short: k
        long: privkey
        takes_value: true
        value_name: certificate
        multiple: true
    - fullchain:
        help: A fullchain certificates file to be used with a TLS listener. Format is <port>:/path/to/fullchain.pem. (e.g. 443:/path/to/fullchain.pem)
        short: f
        long: fullchain
        takes_value: true
        value_name: fullchain
        multiple: true
    - temp_dir:
        help: The directory to store temporary files.
        long: temp_dir
        takes_value: true
        value_name: temp_dir
    - content_upload_slab_count:
        help: The number of slabs in the slab allocator that is used for content uploads (POSTs). The default is 10240.
        long: content_upload_slab_count
        takes_value: true
        value_name: content_upload_slab_count
    - content_upload_slab_size:
        help: The size of the slabs used by the slab allocator for content uploads (POSTs). The default is 1024.
        long: content_upload_slab_size
        takes_value: true
        value_name: content_upload_slab_size
    - max_content_len:
        help: The maximum size of the Content-Length header. This limits the size of file uploads. The default value is 1 mb.
        long: max_content_len
        takes_value: true
        value_name: max_content_len
    - virtual_server:
        help: Specifies a virtual server config. Format is --virtual_server <hostname> <directory> or --virtual_server <bind_ip> <directory>.
        long: virtual_server
        short: v
        takes_value: true
        value_name: virtual_server
        multiple: true
    - main_log_queue_size:
        help: The maximum size (in number of entries) of the main log queue. This queue is shared by all threads. The default value is 2,000. If the queue is full at the time of logging, the entry will not be added to the logs. It will however be reported as a dropped log item.
        long: main_log_queue_size
        takes_value: true
        value_name: main_log_queue_size
    - thread_log_queue_size:
        help: The maximum size (in number of entries) of the log queue per thread. Each thread has it's own thread queue that is part of its thread context. The default value is 1,000. If the queue is full at the time of logging, the entry will not be added to the logs. It will however be reported as a dropped log item. Setting this value to 0 effectively disables logging.
        long: thread_log_queue_size
        takes_value: true
        value_name: thread_log_queue_size
    - stats_frequency:
        help: The frequency in milliseconds at which the statistical information is stored in the LMDB. The default value is 10_000 (10 seconds).
        long: stats_frequency
        takes_value: true
        value_name: stats_frequency
    - admin_uri:
        help: The URI of the admin console. If not specified a random url will be generated. It is important that this URL not be revealed to others.
        long: admin_uri
        takes_value: true
        value_name: admin_uri
    - max_matches:
        help: The maximum number of matches allowed for header processing. Each header for instance is considered a single match. The default value of 500 should be more than sufficient unless additional patterns are added through configuration.
        long: max_matches
        takes_value: true
        value_name: max_matches
    - dictionary_capacity:
        help: The capacity of the dictionary in terms of number of nodes. Each character is a node, however due to the tree structure of the dictionary, different patterns may share a node for a single character. 500 is the default value and is sufficient for the default values. If additional patterns are added, this number may need to be increased.
        long: dictionary_capacity
        takes_value: true
        value_name: dictionary_capacity
    - delete_request_log_rotation:
        help: Delete the request log rotation file upon rotation. This is used in testing scenarios where too much logging would occur if it were not deleted. This setting must not be used in production environments.
        long: delete_request_log_rotation
        takes_value: false
    - lmdb_dir:
        help: Location to store the lmdb data.
        long: lmdb_dir
        takes_value: true
        value_name: lmdb_dir
